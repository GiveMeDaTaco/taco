-- Jinja2 template for eligibility SQL

-- Context:
-- eligibility_table: name of final eligibility table
-- unique_identifiers: list of identifiers with alias (e.g. ['a.col', 'b.col'])
-- unique_without_aliases: list of column names only (e.g. ['col'])
-- checks: list of dicts {name: column_name, sql: expression}
-- tables: list of dicts {name, alias, join_type, join_conditions}
-- where_clauses: list of strings

CREATE TABLE {{ eligibility_table }} AS (
SELECT
{%- for uid in unique_identifiers %}
{{ uid }}{{ "," if not loop.last }}
{%- endfor %}
{%- if checks %},
{%- for check in checks %}
CASE WHEN {{ check.sql }} THEN 1 ELSE 0 END AS {{ check.name }}{{ "," if not loop.last }}
{%- endfor %}
{%- endif %}
FROM {{ tables[0].name }} {{ tables[0].alias }}
{%- for t in tables[1:] %}
{{ t.join_type }} {{ t.name }} {{ t.alias }}
ON {{ t.join_conditions }}
{%- endfor %}
{%- if where_clauses %}
WHERE
{%- for wc in where_clauses %}
{{ wc }}{{ " AND" if not loop.last }}
{%- endfor %}
{%- endif %}
) WITH DATA PRIMARY INDEX prindx ({{ unique_without_aliases|join(', ') }});
COLLECT STATISTICS INDEX prindx ON {{ eligibility_table }};
COLLECT STATISTICS COLUMN ({{ checks|map(attribute='name')|join(', ') }}) ON {{ eligibility_table }};
